#set($method_name = "delete$path.getName()")
public void $method_name(org.minnal.core.Request coreRequest, org.minnal.core.Response coreResponse) {
#set($i = 0)
#foreach($node in $path)
	#set($param_name = $param_names.get($i))
	#set($model_class = $node.getEntityMetaData().getEntityClass().getCanonicalName())
	#set($field_name = $node.getName())
	
	java.util.List $field_name = null;
	org.activejpa.entity.Filter filter = new org.activejpa.entity.Filter();
	#if($parent)
		#set($resource_name = $inflector.camelize($node.getResourceName(), false))
		#set($collection_entity_key = "$resource_name" + "." + "$node.getEntityMetaData().getEntityKey()")
		
		#if($i+1 == $path.size())
	 	    filter.addCondition("$collection_entity_key", org.activejpa.entity.Condition.Operator.in, org.minnal.instrument.resource.ResourceUtil.getCommaSeparatedValues(coreRequest.getHeader("$param_name")));
		#else
			filter.addCondition("$collection_entity_key", coreRequest.getHeader("$param_name"));
		#end
		
		$field_name = (java.util.List) (($parent_model)${parent}.get(0)).collection("$resource_name").where(filter);
		if ($field_name == null || ${field_name}.isEmpty()) {
			throw new org.minnal.core.server.exception.NotFoundException("$field_name with $collection_entity_key " + coreRequest.getHeader("$param_name") + " not found");
		}
	#else
		#if($i+1 == $path.size())
		    filter.addCondition("$node.getEntityMetaData().getEntityKey()", org.activejpa.entity.Condition.Operator.in, org.minnal.instrument.resource.ResourceUtil.getCommaSeparatedValues(coreRequest.getHeader("$param_name")));
		#else
			filter.addCondition("$node.getEntityMetaData().getEntityKey()", coreRequest.getHeader("$param_name"));
		#end
		
		$field_name = (java.util.List) ${model_class}.where(filter);
		if ($field_name == null || ${field_name}.isEmpty()) {
			throw new org.minnal.core.server.exception.NotFoundException("$field_name with $node.getEntityMetaData().getEntityKey() " + coreRequest.getHeader("$param_name") + " not found");
		}
	#end
	
	#if($i+1 != $path.size())
		#set($parent = $field_name)
		#set($parent_model = $model_class)
	#end
	#set($i = $i + 1)
#end
org.activejpa.jpa.JPAContext context = org.activejpa.jpa.JPA.instance.getDefaultConfig().getContext();
context.beginTxn();
boolean failed = true;
try {
	java.util.Iterator iterator = ((java.util.List) $field_name).iterator();
	while(iterator.hasNext()) {
		#if($parent)
			(($parent_model)${parent}.get(0)).collection("$resource_name").remove((${model_class}) iterator.next());
		#else
			((${model_class}) iterator.next()).delete();
		#end
	}
	failed = false;
} finally {
	context.closeTxn(failed);
}
#set ($parent = false)
}
