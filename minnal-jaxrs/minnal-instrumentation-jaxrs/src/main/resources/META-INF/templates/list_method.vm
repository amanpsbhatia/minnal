#set($method_name = "list$inflector.pluralize($path.getName())")
public Object $method_name(javax.ws.rs.core.UriInfo uriInfo) {
#set($i = 0)
#set($search_params = "new java.util.ArrayList()")
#if ($path.getQueryParams().size() > 0)
	#set($search_params = "java.util.Arrays.asList(new String[]{")
	#set($j = 0)
	#foreach($queryParam in $path.getQueryParams())
		#if ($j == 0)
			#set($search_params = ${search_params} + '"' + $queryParam.getName() + '"')
		#else
			#set($search_params = ${search_params} + ', "' + $queryParam.getName() + '"')
		#end
		#set($j = $j + 1)
	#end
	#set($search_params = ${search_params} + '})')
#end
#if ($path.size() > 1)
	#foreach($node in $path)
		#if ($param_names.size() > $i)
			#set($param_name = $param_names.get($i))
		#end
		#set($model_class = $node.getEntityMetaData().getEntityClass().getCanonicalName())
		#set($field_name = $node.getName())
		
		#set($resource_name = $inflector.camelize($node.getResourceName(), false))
		#if($i == $path.size() - 1)
			org.activejpa.entity.Filter filter = org.minnal.instrument.resource.ResourceUtil.getFilter(uriInfo.getQueryParameters(), $search_params);
			org.activejpa.entity.EntityCollection ${field_name}Collection = ${parent}.collection("$resource_name");
			java.util.List $field_name = ${field_name}Collection.where(filter);
			long total = 0;
			if (filter.shouldPage()) {
			  org.activejpa.entity.Filter totalFilter = filter.clone(false);
			  total = ${field_name}Collection.count(totalFilter);
			}
		#else
			#if ($parent)
				#set($collection_entity_key = "$resource_name" + "." + "$node.getEntityMetaData().getEntityKey()")
				$model_class $field_name = ($model_class) ${parent}.collection("$resource_name").first(new Object[]{"$collection_entity_key", uriInfo.getPathParameters().getFirst("$param_name")});
				if ($field_name == null) {
					throw new javax.ws.rs.NotFoundException("$field_name with $collection_entity_key " + uriInfo.getPathParameters().getFirst("$param_name") + " not found");
				}
			#else
				$model_class $field_name = ($model_class) ${model_class}.first(new Object[] {"$node.getEntityMetaData().getEntityKey()", uriInfo.getPathParameters().getFirst("$param_name")});
				if ($field_name == null) {
					throw new javax.ws.rs.NotFoundException("$field_name with $node.getEntityMetaData().getEntityKey() " + uriInfo.getPathParameters().getFirst("$param_name") + " not found");
				}
			#end
		#end
		#set($parent = $field_name)
		#set($i = $i + 1)
	#end
#else
	#set($node = $path.get($i))
	#set($model_class = $node.getEntityMetaData().getEntityClass().getCanonicalName())
	#set($field_name = $node.getName())

	org.activejpa.entity.Filter filter = org.minnal.instrument.resource.ResourceUtil.getFilter(uriInfo.getQueryParameters(), $search_params);
	java.util.List $field_name = ${model_class}.where(filter);
	long total = 0;
	if (filter.shouldPage()) {
	  org.activejpa.entity.Filter totalFilter = filter.clone(false);
	  total = ${model_class}.count(totalFilter);
	}
#end
if (filter.shouldPage()) {
	return new org.minnal.instrument.entity.PaginatedResponse(filter, $field_name, total);
} else {
	return $field_name;
}
#set ($parent = false)
}
