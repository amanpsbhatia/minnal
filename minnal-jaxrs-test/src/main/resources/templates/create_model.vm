package $packageName;

import org.minnal.jpa.entity.BaseDomain;
import javax.persistence.Entity;
import javax.persistence.Table;

#if ($model.isAggregateRoot())
import org.minnal.instrument.entity.*;
#end

/**
 * $model.getName() domain class
 *
 * @author Generated by minnal-generator 
 */
#if ($model.isAggregateRoot())
@AggregateRoot
#end
@Entity
@Table(name="$inflector.tableize($model.getName())")
public class $model.getName() extends BaseDomain {

#foreach($field in $model.getFields())
#if ($field.isSearchable())
	@Searchable
#end
	private $field.getType().getJavaType() $field.getName();
	
#end
#foreach($field in $model.getFields())
	/**
	 * @return the $field.getName()
	 */
	public $field.getType().getJavaType() get$inflector.capitalize($field.getName())() {
		return $field.getName();
	}
	
#end
#foreach($field in $model.getFields())
	/**
	 * @param $field.getName() the $field.getName() to set
	 */
	public void set$inflector.capitalize($field.getName())($field.getType().getJavaType() $field.getName()) {
		this.$field.getName() = $field.getName();
	}
	
#end
}